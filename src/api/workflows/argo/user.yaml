apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: steps-

# Workflows 
###########
spec:
  templates:
  - name: create-user
    steps:
    - - name: ldap-create-user
        template: ldap-create-user
        arguments:
          parameters:
          - name: first_name
            value: "{{workflow.parameters.first_name}}"
          - name: last_name
            value: "{{workflow.parameters.last_name}}"
          - name: email
            value: "{{workflow.parameters.email}}"
          - name: uid
            value: "{{workflow.parameters.user_id}}"
          - name: uidNumber
            value: "{{workflow.parameters.user_id_number}}"
          - name: password
            value: "{{workflow.parameters.password}}"
          - name: department
            value: "{{workflow.parameters.department}}"
          - name: organization
            value: "{{workflow.parameters.organization}}"
          - name: title
            value: "{{workflow.parameters.title}}"
    - - name: ldap-add-user-to-everyone-group
        template: ldap-add-user-to-group
        arguments:
          parameters:
          - name: group
            value: "iplant-everyone"
          - name: uid
            value: "{{workflow.parameters.user_id}}"
    - - name: ldap-add-user-to-community-group
        template: ldap-add-user-to-group
        arguments:
          parameters:
          - name: group
            value: "community"
          - name: uid
            value: "{{workflow.parameters.user_id}}"
    - - name: irods-create-user
        template: irods-create-user
        arguments:
          parameters:
          - name: user_id
            value: "{{workflow.parameters.user_id}}"
    - - name: irods-set-user-password
        template: irods-create-user
        arguments:
          parameters:
          - name: user_id
            value: "{{workflow.parameters.user_id}}"
          - name: password
            value: "{{workflow.parameters.password}}"
    - - name: irods-grant-ipcservices-access-to-user-directory
        template: irods-chmod-own
        arguments:
          parameters:
          - name: user
            value: "ipcservices"
          - name: path
            value: "/iplant/home/{{workflow.parameters.user_id}}"
    - - name: irods-grant-rodsamin-access-to-user-directory
        template: irods-chmod-own
        arguments:
          parameters:
          - name: user
            value: "rodsadmin"
          - name: path
            value: "/iplant/home/{{workflow.parameters.user_id}}"
    - - name: mailchimp-subscribe-user
        template: mailchimp-subscribe-user
        arguments:
          parameters:
          - name: email
            value: "{{workflow.parameters.email}}"
          - name: first_name
            value: "{{workflow.parameters.first_name}}"
          - name: last_name
            value: "{{workflow.parameters.last_name}}"
    - - name: grant-access-to-discovery-environment
        template: api-grant-access-request
        arguments:
          parameters:
          - name: service
            value: "Discovery Environment"
          - name: user_id
            value: "{{workflow.parameters.user_id}}"
    - - name: grant-access-to-data-commons
        template: api-grant-access-request
        arguments:
          parameters:
          - name: service
            value: "Data Commons"
          - name: user_id
            value: "{{workflow.parameters.user_id}}"

# Tasks
#######

  - name: api-grant-access-request
    inputs:
      parameters:
      - name: service
      - name: user_id
    container:
      image: localhost:5000/portal2
      command: [curl]
      #TODO add authorization header argument: "-H 'Authorization: foo'"
      args: ["-X PUT", "-d '{ service: \"{{input.parameters.service}}\", username: \"{{input.parameters.user_id}}\" }'", "{{workflow.parameters.portal_api_base_url}}/services/requests"]

  - name: irods-create-user
    inputs:
      parameters:
      - name: user_id
    container:
      image: localhost:5000/portal2
      env:
      - name: IRODS_ENVIRONMENT_FILE
        value: "/usr/src/app/irods_environment.json"
      command: [iadmin]
      args: ["mkuser", "{{inputs.parameters.user_id}}"]

  - name: irods-set-user-password
    inputs:
      parameters:
      - name: user_id
      - name: password
    container:
      image: localhost:5000/portal2
      env:
      - name: IRODS_ENVIRONMENT_FILE
        value: "/usr/src/app/irods_environment.json"
      command: [iadmin]
      args: ["moduser", "{{inputs.parameters.user_id}}", "password", "{{inputs.parameters.password}}"]

  - name: irods-chmod-own
    inputs:
      parameters:
      - name: user
      - name: path
    container:
      image: localhost:5000/portal2
      env:
      - name: IRODS_ENVIRONMENT_FILE
        value: "/usr/src/app/irods_environment.json"
      command: [ichmod]
      args: ["own", "{{inputs.parameters.user}}", "{{inputs.parameters.path}}"]

  #FIXME duplicated in services.yaml
  - name: ldap-add-user-to-group
    inputs:
      parameters:
      - name: group
      - name: uid
    container:
      image: localhost:5000/portal2
      command: [sh, -c]
      args: ['echo "dn: cn={{inputs.parameters.group}},ou=Groups,dc=iplantcollaborative,dc=org\nchangetype: modify\nadd: memberUid\nmemberUid: {{inputs.parameters.uid}}" | ldapmodify -H {{workflow.parameters.ldap_host}} -D {{workflow.parameters.ldap_admin}} -w {{workflow.parameters.ldap_password}}']
  
  - name: ldap-create-user
    inputs:
      parameters:
      - name: first_name
      - name: last_name
      - name: email
      - name: uid
      - name: uidNumber
      - name: password
      - name: department
      - name: organization
      - name: title
    container:
      image: localhost:5000/portal2
      command: [sh, -c]
      args: [ 'echo "dn: uid={{inputs.parameters.uid}},ou=People,dc=iplantcollaborative,dc=org\nobjectClass: posixAccount\nobjectClass: shadowAccount\nobjectClass: inetOrgPerson\ngivenName: {{inputs.parameters.first_name}}\nsn: {{inputs.parameters.last_name}}\ncn: {{inputs.parameters.first_name}} {{inputs.parameters.last_name}}\nuid: {{inputs.parameters.uid}}\nuserPassword: {{inputs.parameters.password}}\nmail: {{inputs.parameters.email}}\ndepartmentNumber: {{inputs.parameters.department}}\no: {{inputs.parameters.organization}}\ntitle: {{inputs.parameters.title}}\nhomeDirectory: /home/{{inputs.parameters.uid}}\nloginShell: /bin/bash\ngidNumber: 10013\nuidNumber: {{inputs.parameters.uidNumber}}\nshadowLastChange:{{workflow.parameters.daysSinceEpoch}}\nshadowMin: 1\nshadowMax: 730\nshadowInactive: 10\nshadowWarning: 10" | ldapadd -H {{workflow.parameters.ldap_host}} -D {{workflow.parameters.ldap_admin}} -w {{workflow.parameters.ldap_password}}' ]

  - name: mailchimp-subscribe-user
    inputs:
      - name: first_name
      - name: last_name
      - name: email
    container:
      image: localhost:5000/portal2
      command: [curl]
      args: [ 
        "-X POST", 
        "https://server.api.mailchimp.com/3.0/lists/{{workflow.parameters.mailchimp_list_id}}/members", 
        "-H 'authorization: Basic {{workflow.parameters.mailchimp_api_key}}",
        "-d '{\"email_address\":\"{{inputs.parameters.email}}\",\"status\":\"subscribed\",\"merge_fields":{\"FNAME\":{{input.parameters.first_name}},\"LNAME\":{{input.parameters.last_name}}}}'"
      ]
      